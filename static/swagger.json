{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "The Theseus is an off-chain service which provides access to community entities (posts, likes, follows)",
    "title": "Theseus",
    "version": "0.0.1"
  },
  "basePath": "/v1",
  "paths": {
    "/posts": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "Community"
        ],
        "summary": "Return posts with additional meta information.",
        "operationId": "ListPosts",
        "parameters": [
          {
            "maximum": 9,
            "minimum": 1,
            "example": 4,
            "description": "filters posts by category",
            "name": "category",
            "in": "query"
          },
          {
            "enum": [
              "created_at",
              "likesCount",
              "dislikesCount",
              "pdv"
            ],
            "type": "string",
            "default": "createdAt",
            "example": "likes",
            "description": "sets posts' field to be sorted by",
            "name": "sortBy",
            "in": "query"
          },
          {
            "enum": [
              "asc",
              "desc"
            ],
            "type": "string",
            "default": "desc",
            "example": "asc",
            "description": "sets sort's direct",
            "name": "orderBy",
            "in": "query"
          },
          {
            "example": "decentr1ltx6yymrs8eq4nmnhzfzxj6tspjuymh8mgd6gz",
            "description": "filters posts by owner",
            "name": "owner",
            "in": "query"
          },
          {
            "example": "decentr1ltx6yymrs8eq4nmnhzfzxj6tspjuymh8mgd6gz",
            "name": "likedBy",
            "in": "query"
          },
          {
            "maximum": 100,
            "minimum": 1,
            "default": 20,
            "description": "limits count of returned posts",
            "name": "limit",
            "in": "query"
          },
          {
            "example": "decentr1ltx6yymrs8eq4nmnhzfzxj6tspjuymh8mgd6gz/df870e39-6fcb-11eb-9461-0242ac11000b",
            "description": "sets not-including bound for list by post id(`owner/uuid`)",
            "name": "after",
            "in": "query"
          },
          {
            "example": 1613414389,
            "description": "sets lower datetime bound for list",
            "name": "from",
            "in": "query"
          },
          {
            "example": 1613424389,
            "description": "sets upper datetime bound for list",
            "name": "to",
            "in": "query"
          },
          {
            "example": "decentr1ltx6yymrs8eq4nmnhzfzxj6tspjuymh8mgd6gz",
            "description": "adds liked flag to response",
            "name": "requestedBy",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Posts",
            "schema": {
              "$ref": "#/definitions/ListPostsResponse"
            }
          },
          "400": {
            "description": "bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/posts/{owner}/{uuid}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "Community"
        ],
        "summary": "Get post by owner and uuid.",
        "operationId": "GetPost",
        "parameters": [
          {
            "type": "string",
            "name": "owner",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "uuid",
            "in": "path",
            "required": true
          },
          {
            "example": "decentr1ltx6yymrs8eq4nmnhzfzxj6tspjuymh8mgd6gz",
            "description": "adds liked flag to response",
            "name": "requestedBy",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Posts",
            "schema": {
              "$ref": "#/definitions/ListPostsResponse"
            }
          },
          "400": {
            "description": "bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Category": {
      "type": "integer",
      "format": "uint8",
      "x-go-package": "github.com/Decentr-net/decentr/x/community/types"
    },
    "Error": {
      "type": "object",
      "title": "Error ...",
      "properties": {
        "error": {
          "type": "string",
          "x-go-name": "Error"
        }
      },
      "x-go-package": "github.com/Decentr-net/theseus/internal/server"
    },
    "LikeWeight": {
      "type": "integer",
      "format": "int8",
      "x-go-package": "github.com/Decentr-net/decentr/x/community/types"
    },
    "ListPostsResponse": {
      "type": "object",
      "title": "ListPostsResponse ...",
      "properties": {
        "posts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Post"
          },
          "x-go-name": "Posts"
        },
        "profiles": {
          "description": "Profiles dictionary where key is an address and value is a profile.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/Profile"
          },
          "x-go-name": "Profiles"
        },
        "stats": {
          "description": "Posts' statistics dictionary where key is a full form ID (owner/uuid) and value is statistics",
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/StatsItem"
            }
          },
          "x-go-name": "Stats"
        }
      },
      "x-go-package": "github.com/Decentr-net/theseus/internal/server"
    },
    "Post": {
      "type": "object",
      "title": "Post ...",
      "properties": {
        "category": {
          "$ref": "#/definitions/Category"
        },
        "createdAt": {
          "type": "integer",
          "format": "uint64",
          "x-go-name": "CreatedAt"
        },
        "dislikesCount": {
          "type": "integer",
          "format": "uint32",
          "x-go-name": "DislikesCount"
        },
        "likeWeight": {
          "$ref": "#/definitions/LikeWeight"
        },
        "likesCount": {
          "type": "integer",
          "format": "uint32",
          "x-go-name": "LikesCount"
        },
        "owner": {
          "type": "string",
          "x-go-name": "Owner"
        },
        "pdv": {
          "type": "number",
          "format": "double",
          "x-go-name": "PDV"
        },
        "previewImage": {
          "type": "string",
          "x-go-name": "PreviewImage"
        },
        "text": {
          "type": "string",
          "x-go-name": "Text"
        },
        "title": {
          "type": "string",
          "x-go-name": "Title"
        },
        "uuid": {
          "type": "string",
          "x-go-name": "UUID"
        }
      },
      "x-go-package": "github.com/Decentr-net/theseus/internal/server"
    },
    "Profile": {
      "type": "object",
      "title": "Profile ...",
      "properties": {
        "address": {
          "type": "string",
          "x-go-name": "Address"
        },
        "avatar": {
          "type": "string",
          "x-go-name": "Avatar"
        },
        "bio": {
          "type": "string",
          "x-go-name": "Bio"
        },
        "birthday": {
          "type": "string",
          "x-go-name": "Birthday"
        },
        "firstName": {
          "type": "string",
          "x-go-name": "FirstName"
        },
        "gender": {
          "type": "string",
          "x-go-name": "Gender"
        },
        "lastName": {
          "type": "string",
          "x-go-name": "LastName"
        },
        "postsCount": {
          "type": "integer",
          "format": "uint16",
          "x-go-name": "PostsCount"
        },
        "registeredAt": {
          "type": "integer",
          "format": "uint64",
          "x-go-name": "RegisteredAt"
        }
      },
      "x-go-package": "github.com/Decentr-net/theseus/internal/server"
    },
    "StatsItem": {
      "description": "Key is RFC3999 date, value is PDV.",
      "type": "object",
      "title": "StatsItem ...",
      "properties": {
        "date": {
          "type": "string",
          "x-go-name": "Date"
        },
        "value": {
          "type": "number",
          "format": "double",
          "x-go-name": "Value"
        }
      },
      "x-go-package": "github.com/Decentr-net/theseus/internal/server"
    }
  }
}